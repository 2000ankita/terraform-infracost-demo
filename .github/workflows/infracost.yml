name: Infracost with GPT Recommendations

on:
  push:
    paths:
      - '**.tf'
      - '.github/workflows/**.yml'

env:
  INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  infracost:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install Infracost CLI
        run: |
          curl -s https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          echo "$HOME/.infracost/bin" >> $GITHUB_PATH

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary

      - name: Convert plan to JSON
        run: terraform show -json tfplan.binary > tfplan.json

      - name: Run Infracost diff
        run: |
          infracost diff \
            --path tfplan.json \
            --project-name infracost-proj \
            --format json \
            --out-file infracost-output.json

      - name: Extract summarized cost data
        id: summarize
        run: |
          echo "üìä Extracting summary from Infracost output..."
          SUMMARY=$(jq '[.projects[].diff.resources[] | {name, hourlyCost, monthlyCost}]' infracost-output.json | head -c 2000)
          echo "SUMMARY<<EOF" >> $GITHUB_ENV
          echo "$SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Ask OpenAI for Optimization Suggestions
        run: |
          echo "üí¨ Calling OpenAI..."
          PROMPT="You are a cloud cost optimization expert. Here's an Infracost summary:\n${SUMMARY}\n\nPlease suggest cost optimizations."

          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
            {
              "model": "gpt-3.5-turbo",
              "messages": [{"role": "user", "content": "${PROMPT}"}],
              "temperature": 0.7
            }
            EOF
            )

          echo "$RESPONSE" > openai-response.json
          echo "üîç GPT Recommendation:"
          jq -r '.choices[0].message.content' openai-response.json
